// Leetcode Problem No 11
''' Area is maximum when height and breadth is maximum...by choosing min we get maximum valuefor height.how consider (7,8) left wall is 7 right wall is 8 the water can fill upto 7 isnt it'''
from typing import List
def maxArea(height:List[int])-> int:
    l,r=0,len(height)-1
    max_area=0
    while l<r:
        high=min(height[l],height[r])
        area=(r-l)*high
        max_area=max(area,max_area)
        if height[l]<height[r]:
            l+=1
        else:
            r-=1
    return max_area

# assert maxArea([1,8,6,2,5,4,8,3,7])==49

import unittest
class TestArea(unittest.TestCase):
    def test_area1(self):
        result=maxArea([1,8,6,2,5,4,8,3,7])
        self.assertEqual(result,49)
    def test_area2(self):
        result=maxArea([1,1])
        self.assertEqual(result,1)
if __name__=='__main__':
    unittest.main()
